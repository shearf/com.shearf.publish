<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <bean id="log-filter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="connectionLogEnabled" value="true" />
        <property name="connectionLogErrorEnabled" value="true" />
    </bean>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">

        <property name="url" value="${publish.jdbc.url}" />
        <property name="username" value="${publish.jdbc.username}" />
        <property name="password" value="${publish.jdbc.password}" />

        <property name="initialSize" value="${publish.druid.initialSize}" />
        <property name="minIdle" value="${publish.druid.minIdle}" />
        <property name="maxActive" value="${publish.druid.maxActive}" />
        <property name="timeBetweenEvictionRunsMillis" value="${publish.druid.timeBetweenEvictionRunsMillis}" />
        <property name="minEvictableIdleTimeMillis" value="${publish.druid.minEvictableIdleTimeMillis}" />

        <property name="validationQuery" value="${publish.druid.validationQuery}" />
        <property name="testWhileIdle" value="${publish.druid.testWhileIdle}" />
        <property name="testOnBorrow" value="${publish.druid.testOnBorrow}" />
        <property name="testOnReturn" value="${publish.druid.testOnReturn}" />

        <property name="poolPreparedStatements" value="${publish.druid.poolPreparedStatements}" />
        <property name="filters" value="${publish.druid.filters}" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="${publish.druid.removeAbandoned}" />
        <!-- 超过时间;单位为秒 -->
        <property name="removeAbandonedTimeout" value="${publish.druid.removeAbandonedTimeout}" />
        <!-- 关闭abanded链接是否输出错误日志 -->
        <property name="logAbandoned" value="${publish.druid.logAbandoned}" />
        <property name="proxyFilters">
            <list>
                <ref bean="log-filter" />
            </list>
        </property>
    </bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- mybatis 分页插件 -->
    <bean id="pageHelperPlugin" class="com.github.pagehelper.PageHelper">
        <property name="properties">
            <props>
                <!-- 4.0.0之后不需要设置改参数 -->
                <prop key="dialect">mysql</prop>
                <!-- 该参数默认为false -->
                <!-- 设置为true时,会将RowBounds第一个参数offset当成pageNum页码使用 -->
                <prop key="offsetAsPageNum">true</prop>
                <!-- 该参数默认为false -->
                <!-- 设置为true, 使用RowBounds分页进行count查询 -->
                <prop key="rowBoundsWithCount">true</prop>
                <!-- 设置为true,如果pageSize=0或者RowBounds.limit=0就会查询出全部的结果 -->
                <!-- (相当于没有执行分页查询,但是返回结果仍然是Page类型) -->
                <prop key="pageSizeZero">true</prop>
                <!-- 3.3.0版本可用 -分页参数合理化,默认为false禁用 -->
                <!-- 启用合理化时, 如果pageNum < 1 会查询第一页, 如果pageNum > maxPage会查询到最后一页 -->
                <!-- 禁用合理化时, 如果pageNum < 1 或者 pageNum > maxPage 会返回最后一页 -->
                <prop key="reasonable">false</prop>
                <prop key="supportMethodsArguments">true</prop>
                <prop key="returnPageInfo">check</prop>
            </props>
        </property>
    </bean>

    <!-- mybatis session factory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 自动扫描entity目录, 省略configuration.xml的手动配置 -->
        <property name="typeAliasesPackage" value="com.shearf.publish.entity" />
        <!-- 显式指定Mapper文件位置 -->
        <property name="mapperLocations" value="classpath:/mappers/*Mapper.xml" />
        <!-- 插件配置 -->
        <property name="plugins">
            <array>
                <ref bean="pageHelperPlugin" />
            </array>
        </property>
    </bean>

    <!-- 开启事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" />
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
        <qualifier value="transaction" />
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.shearf.publish.dao.mapper" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
    </bean>
</beans>